// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ItemVersionManagement__getAllVersionResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class ItemVersionManagement__getLatestValidVersionResult {
  value0: string;
  value1: BigInt;

  constructor(value0: string, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): string {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class ItemVersionManagement__getSpecifyVersionResultValue0Struct extends ethereum.Tuple {
  get source(): string {
    return this[0].toString();
  }

  get fingerprint(): BigInt {
    return this[1].toBigInt();
  }

  get invalid(): boolean {
    return this[2].toBoolean();
  }
}

export class ItemVersionManagement extends ethereum.SmartContract {
  static bind(address: Address): ItemVersionManagement {
    return new ItemVersionManagement("ItemVersionManagement", address);
  }

  Murmes(): Address {
    let result = super.call("Murmes", "Murmes():(address)", []);

    return result[0].toAddress();
  }

  try_Murmes(): ethereum.CallResult<Address> {
    let result = super.tryCall("Murmes", "Murmes():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAllVersion(itemId: BigInt): ItemVersionManagement__getAllVersionResult {
    let result = super.call(
      "getAllVersion",
      "getAllVersion(uint256):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(itemId)]
    );

    return new ItemVersionManagement__getAllVersionResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getAllVersion(
    itemId: BigInt
  ): ethereum.CallResult<ItemVersionManagement__getAllVersionResult> {
    let result = super.tryCall(
      "getAllVersion",
      "getAllVersion(uint256):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(itemId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ItemVersionManagement__getAllVersionResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  getLatestValidVersion(
    itemId: BigInt
  ): ItemVersionManagement__getLatestValidVersionResult {
    let result = super.call(
      "getLatestValidVersion",
      "getLatestValidVersion(uint256):(string,uint256)",
      [ethereum.Value.fromUnsignedBigInt(itemId)]
    );

    return new ItemVersionManagement__getLatestValidVersionResult(
      result[0].toString(),
      result[1].toBigInt()
    );
  }

  try_getLatestValidVersion(
    itemId: BigInt
  ): ethereum.CallResult<ItemVersionManagement__getLatestValidVersionResult> {
    let result = super.tryCall(
      "getLatestValidVersion",
      "getLatestValidVersion(uint256):(string,uint256)",
      [ethereum.Value.fromUnsignedBigInt(itemId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ItemVersionManagement__getLatestValidVersionResult(
        value[0].toString(),
        value[1].toBigInt()
      )
    );
  }

  getSpecifyVersion(
    itemId: BigInt,
    versionId: BigInt
  ): ItemVersionManagement__getSpecifyVersionResultValue0Struct {
    let result = super.call(
      "getSpecifyVersion",
      "getSpecifyVersion(uint256,uint256):((string,uint256,bool))",
      [
        ethereum.Value.fromUnsignedBigInt(itemId),
        ethereum.Value.fromUnsignedBigInt(versionId)
      ]
    );

    return changetype<
      ItemVersionManagement__getSpecifyVersionResultValue0Struct
    >(result[0].toTuple());
  }

  try_getSpecifyVersion(
    itemId: BigInt,
    versionId: BigInt
  ): ethereum.CallResult<
    ItemVersionManagement__getSpecifyVersionResultValue0Struct
  > {
    let result = super.tryCall(
      "getSpecifyVersion",
      "getSpecifyVersion(uint256,uint256):((string,uint256,bool))",
      [
        ethereum.Value.fromUnsignedBigInt(itemId),
        ethereum.Value.fromUnsignedBigInt(versionId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<ItemVersionManagement__getSpecifyVersionResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  updateItemVersion(
    itemId: BigInt,
    fingerprint: BigInt,
    source: string
  ): BigInt {
    let result = super.call(
      "updateItemVersion",
      "updateItemVersion(uint256,uint256,string):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(itemId),
        ethereum.Value.fromUnsignedBigInt(fingerprint),
        ethereum.Value.fromString(source)
      ]
    );

    return result[0].toBigInt();
  }

  try_updateItemVersion(
    itemId: BigInt,
    fingerprint: BigInt,
    source: string
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "updateItemVersion",
      "updateItemVersion(uint256,uint256,string):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(itemId),
        ethereum.Value.fromUnsignedBigInt(fingerprint),
        ethereum.Value.fromString(source)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get ms(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DeleteInvaildItemCall extends ethereum.Call {
  get inputs(): DeleteInvaildItemCall__Inputs {
    return new DeleteInvaildItemCall__Inputs(this);
  }

  get outputs(): DeleteInvaildItemCall__Outputs {
    return new DeleteInvaildItemCall__Outputs(this);
  }
}

export class DeleteInvaildItemCall__Inputs {
  _call: DeleteInvaildItemCall;

  constructor(call: DeleteInvaildItemCall) {
    this._call = call;
  }

  get itemId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DeleteInvaildItemCall__Outputs {
  _call: DeleteInvaildItemCall;

  constructor(call: DeleteInvaildItemCall) {
    this._call = call;
  }
}

export class ReportInvalidVersionCall extends ethereum.Call {
  get inputs(): ReportInvalidVersionCall__Inputs {
    return new ReportInvalidVersionCall__Inputs(this);
  }

  get outputs(): ReportInvalidVersionCall__Outputs {
    return new ReportInvalidVersionCall__Outputs(this);
  }
}

export class ReportInvalidVersionCall__Inputs {
  _call: ReportInvalidVersionCall;

  constructor(call: ReportInvalidVersionCall) {
    this._call = call;
  }

  get itemId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get versionId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ReportInvalidVersionCall__Outputs {
  _call: ReportInvalidVersionCall;

  constructor(call: ReportInvalidVersionCall) {
    this._call = call;
  }
}

export class UpdateItemVersionCall extends ethereum.Call {
  get inputs(): UpdateItemVersionCall__Inputs {
    return new UpdateItemVersionCall__Inputs(this);
  }

  get outputs(): UpdateItemVersionCall__Outputs {
    return new UpdateItemVersionCall__Outputs(this);
  }
}

export class UpdateItemVersionCall__Inputs {
  _call: UpdateItemVersionCall;

  constructor(call: UpdateItemVersionCall) {
    this._call = call;
  }

  get itemId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get fingerprint(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get source(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class UpdateItemVersionCall__Outputs {
  _call: UpdateItemVersionCall;

  constructor(call: UpdateItemVersionCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}
