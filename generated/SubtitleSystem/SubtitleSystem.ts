// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ApplicationCancel extends ethereum.Event {
  get params(): ApplicationCancel__Params {
    return new ApplicationCancel__Params(this);
  }
}

export class ApplicationCancel__Params {
  _event: ApplicationCancel;

  constructor(event: ApplicationCancel) {
    this._event = event;
  }

  get applyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ApplicationRecover extends ethereum.Event {
  get params(): ApplicationRecover__Params {
    return new ApplicationRecover__Params(this);
  }
}

export class ApplicationRecover__Params {
  _event: ApplicationRecover;

  constructor(event: ApplicationRecover) {
    this._event = event;
  }

  get applyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApplicationSubmit extends ethereum.Event {
  get params(): ApplicationSubmit__Params {
    return new ApplicationSubmit__Params(this);
  }
}

export class ApplicationSubmit__Params {
  _event: ApplicationSubmit;

  constructor(event: ApplicationSubmit) {
    this._event = event;
  }

  get applicant(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get platform(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get videoId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get strategy(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get language(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get deadline(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get applyId(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get src(): string {
    return this._event.parameters[8].value.toString();
  }
}

export class OpeatorsStateChange extends ethereum.Event {
  get params(): OpeatorsStateChange__Params {
    return new OpeatorsStateChange__Params(this);
  }
}

export class OpeatorsStateChange__Params {
  _event: OpeatorsStateChange;

  constructor(event: OpeatorsStateChange) {
    this._event = event;
  }

  get opeators(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get state(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PlatformJoin extends ethereum.Event {
  get params(): PlatformJoin__Params {
    return new PlatformJoin__Params(this);
  }
}

export class PlatformJoin__Params {
  _event: PlatformJoin;

  constructor(event: PlatformJoin) {
    this._event = event;
  }

  get platform(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }

  get symbol(): string {
    return this._event.parameters[3].value.toString();
  }

  get rate1(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get rate2(): i32 {
    return this._event.parameters[5].value.toI32();
  }
}

export class PlatformSetRate extends ethereum.Event {
  get params(): PlatformSetRate__Params {
    return new PlatformSetRate__Params(this);
  }
}

export class PlatformSetRate__Params {
  _event: PlatformSetRate;

  constructor(event: PlatformSetRate) {
    this._event = event;
  }

  get platform(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get rate1(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get rate2(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class RegisterLanguage extends ethereum.Event {
  get params(): RegisterLanguage__Params {
    return new RegisterLanguage__Params(this);
  }
}

export class RegisterLanguage__Params {
  _event: RegisterLanguage;

  constructor(event: RegisterLanguage) {
    this._event = event;
  }

  get language(): string {
    return this._event.parameters[0].value.toString();
  }

  get id(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class SubitlteGetEvaluation extends ethereum.Event {
  get params(): SubitlteGetEvaluation__Params {
    return new SubitlteGetEvaluation__Params(this);
  }
}

export class SubitlteGetEvaluation__Params {
  _event: SubitlteGetEvaluation;

  constructor(event: SubitlteGetEvaluation) {
    this._event = event;
  }

  get subtitleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get evaluator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get attitude(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class SubtilteStateChange extends ethereum.Event {
  get params(): SubtilteStateChange__Params {
    return new SubtilteStateChange__Params(this);
  }
}

export class SubtilteStateChange__Params {
  _event: SubtilteStateChange;

  constructor(event: SubtilteStateChange) {
    this._event = event;
  }

  get subtitleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get state(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get applyId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SubtitleCountsUpdate extends ethereum.Event {
  get params(): SubtitleCountsUpdate__Params {
    return new SubtitleCountsUpdate__Params(this);
  }
}

export class SubtitleCountsUpdate__Params {
  _event: SubtitleCountsUpdate;

  constructor(event: SubtitleCountsUpdate) {
    this._event = event;
  }

  get platform(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get subtitleId(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }

  get counts(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }
}

export class SystemSetAccess extends ethereum.Event {
  get params(): SystemSetAccess__Params {
    return new SystemSetAccess__Params(this);
  }
}

export class SystemSetAccess__Params {
  _event: SystemSetAccess;

  constructor(event: SystemSetAccess) {
    this._event = event;
  }

  get newAccess(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SystemSetAudit extends ethereum.Event {
  get params(): SystemSetAudit__Params {
    return new SystemSetAudit__Params(this);
  }
}

export class SystemSetAudit__Params {
  _event: SystemSetAudit;

  constructor(event: SystemSetAudit) {
    this._event = event;
  }

  get newAudit(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SystemSetDetection extends ethereum.Event {
  get params(): SystemSetDetection__Params {
    return new SystemSetDetection__Params(this);
  }
}

export class SystemSetDetection__Params {
  _event: SystemSetDetection;

  constructor(event: SystemSetDetection) {
    this._event = event;
  }

  get newDetection(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SystemSetLockUpTime extends ethereum.Event {
  get params(): SystemSetLockUpTime__Params {
    return new SystemSetLockUpTime__Params(this);
  }
}

export class SystemSetLockUpTime__Params {
  _event: SystemSetLockUpTime;

  constructor(event: SystemSetLockUpTime) {
    this._event = event;
  }

  get time(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SystemSetSettlement extends ethereum.Event {
  get params(): SystemSetSettlement__Params {
    return new SystemSetSettlement__Params(this);
  }
}

export class SystemSetSettlement__Params {
  _event: SystemSetSettlement;

  constructor(event: SystemSetSettlement) {
    this._event = event;
  }

  get strategyId(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get strategy(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get notes(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class SystemSetSubtitleToken extends ethereum.Event {
  get params(): SystemSetSubtitleToken__Params {
    return new SystemSetSubtitleToken__Params(this);
  }
}

export class SystemSetSubtitleToken__Params {
  _event: SystemSetSubtitleToken;

  constructor(event: SystemSetSubtitleToken) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SystemSetVideoToken extends ethereum.Event {
  get params(): SystemSetVideoToken__Params {
    return new SystemSetVideoToken__Params(this);
  }
}

export class SystemSetVideoToken__Params {
  _event: SystemSetVideoToken;

  constructor(event: SystemSetVideoToken) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SystemSetZimuToken extends ethereum.Event {
  get params(): SystemSetZimuToken__Params {
    return new SystemSetZimuToken__Params(this);
  }
}

export class SystemSetZimuToken__Params {
  _event: SystemSetZimuToken;

  constructor(event: SystemSetZimuToken) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UserInfoUpdate extends ethereum.Event {
  get params(): UserInfoUpdate__Params {
    return new UserInfoUpdate__Params(this);
  }
}

export class UserInfoUpdate__Params {
  _event: UserInfoUpdate;

  constructor(event: UserInfoUpdate) {
    this._event = event;
  }

  get usr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reputationSpread(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tokenSpread(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class UserJoin extends ethereum.Event {
  get params(): UserJoin__Params {
    return new UserJoin__Params(this);
  }
}

export class UserJoin__Params {
  _event: UserJoin;

  constructor(event: UserJoin) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reputation(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get deposit(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class UserLockRewardUpdate extends ethereum.Event {
  get params(): UserLockRewardUpdate__Params {
    return new UserLockRewardUpdate__Params(this);
  }
}

export class UserLockRewardUpdate__Params {
  _event: UserLockRewardUpdate;

  constructor(event: UserLockRewardUpdate) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get platform(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get day(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get reward(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class UserWithdraw extends ethereum.Event {
  get params(): UserWithdraw__Params {
    return new UserWithdraw__Params(this);
  }
}

export class UserWithdraw__Params {
  _event: UserWithdraw;

  constructor(event: UserWithdraw) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get platform(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get day(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }

  get all(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class VideoCountsUpdate extends ethereum.Event {
  get params(): VideoCountsUpdate__Params {
    return new VideoCountsUpdate__Params(this);
  }
}

export class VideoCountsUpdate__Params {
  _event: VideoCountsUpdate;

  constructor(event: VideoCountsUpdate) {
    this._event = event;
  }

  get platform(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }

  get counts(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }
}

export class VideoCreate extends ethereum.Event {
  get params(): VideoCreate__Params {
    return new VideoCreate__Params(this);
  }
}

export class VideoCreate__Params {
  _event: VideoCreate;

  constructor(event: VideoCreate) {
    this._event = event;
  }

  get platform(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get realId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get id(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get symbol(): string {
    return this._event.parameters[3].value.toString();
  }

  get creator(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class VideoPreExtract extends ethereum.Event {
  get params(): VideoPreExtract__Params {
    return new VideoPreExtract__Params(this);
  }
}

export class VideoPreExtract__Params {
  _event: VideoPreExtract;

  constructor(event: VideoPreExtract) {
    this._event = event;
  }

  get videoId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get unsettled(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get surplus(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SubtitleSystem__getSubtitleAuditInfoResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }

  getValue2(): BigInt {
    return this.value2;
  }

  getValue3(): BigInt {
    return this.value3;
  }

  getValue4(): BigInt {
    return this.value4;
  }
}

export class SubtitleSystem__getUserBaseInfoResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromSignedBigInt(this.value1));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class SubtitleSystem__platformRateResult {
  value0: i32;
  value1: i32;

  constructor(value0: i32, value1: i32) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    return map;
  }

  getValue0(): i32 {
    return this.value0;
  }

  getValue1(): i32 {
    return this.value1;
  }
}

export class SubtitleSystem__platformsResult {
  value0: string;
  value1: string;
  value2: BigInt;
  value3: i32;
  value4: i32;

  constructor(
    value0: string,
    value1: string,
    value2: BigInt,
    value3: i32,
    value4: i32
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    map.set(
      "value4",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value4))
    );
    return map;
  }

  getName(): string {
    return this.value0;
  }

  getSymbol(): string {
    return this.value1;
  }

  getPlatformId(): BigInt {
    return this.value2;
  }

  getRateCountsToProfit(): i32 {
    return this.value3;
  }

  getRateAuditorDivide(): i32 {
    return this.value4;
  }
}

export class SubtitleSystem__settlementStrategyResult {
  value0: Address;
  value1: string;

  constructor(value0: Address, value1: string) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    return map;
  }

  getStrategy(): Address {
    return this.value0;
  }

  getNotes(): string {
    return this.value1;
  }
}

export class SubtitleSystem__subtitleNFTResult {
  value0: BigInt;
  value1: i32;
  value2: BigInt;

  constructor(value0: BigInt, value1: i32, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getApplyId(): BigInt {
    return this.value0;
  }

  getState(): i32 {
    return this.value1;
  }

  getStateChangeTime(): BigInt {
    return this.value2;
  }
}

export class SubtitleSystem__totalApplysResult {
  value0: Address;
  value1: Address;
  value2: BigInt;
  value3: string;
  value4: i32;
  value5: BigInt;
  value6: i32;
  value7: BigInt;
  value8: BigInt;

  constructor(
    value0: Address,
    value1: Address,
    value2: BigInt,
    value3: string,
    value4: i32,
    value5: BigInt,
    value6: i32,
    value7: BigInt,
    value8: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set(
      "value4",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value4))
    );
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set(
      "value6",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value6))
    );
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    return map;
  }

  getApplicant(): Address {
    return this.value0;
  }

  getPlatform(): Address {
    return this.value1;
  }

  getVideoId(): BigInt {
    return this.value2;
  }

  getSource(): string {
    return this.value3;
  }

  getStrategy(): i32 {
    return this.value4;
  }

  getAmount(): BigInt {
    return this.value5;
  }

  getLanguage(): i32 {
    return this.value6;
  }

  getAdopted(): BigInt {
    return this.value7;
  }

  getDeadline(): BigInt {
    return this.value8;
  }
}

export class SubtitleSystem__videosResult {
  value0: Address;
  value1: BigInt;
  value2: string;
  value3: Address;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: Address,
    value1: BigInt,
    value2: string,
    value3: Address,
    value4: BigInt,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getPlatform(): Address {
    return this.value0;
  }

  getId(): BigInt {
    return this.value1;
  }

  getSymbol(): string {
    return this.value2;
  }

  getCreator(): Address {
    return this.value3;
  }

  getTotalViewCouts(): BigInt {
    return this.value4;
  }

  getUnsettled(): BigInt {
    return this.value5;
  }
}

export class SubtitleSystem extends ethereum.SmartContract {
  static bind(address: Address): SubtitleSystem {
    return new SubtitleSystem("SubtitleSystem", address);
  }

  Despoit(): BigInt {
    let result = super.call("Despoit", "Despoit():(uint256)", []);

    return result[0].toBigInt();
  }

  try_Despoit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("Despoit", "Despoit():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  accessStrategy(): Address {
    let result = super.call("accessStrategy", "accessStrategy():(address)", []);

    return result[0].toAddress();
  }

  try_accessStrategy(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "accessStrategy",
      "accessStrategy():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  auditStrategy(): Address {
    let result = super.call("auditStrategy", "auditStrategy():(address)", []);

    return result[0].toAddress();
  }

  try_auditStrategy(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "auditStrategy",
      "auditStrategy():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createVideo(id: BigInt, symbol: string, creator: Address): BigInt {
    let result = super.call(
      "createVideo",
      "createVideo(uint256,string,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(id),
        ethereum.Value.fromString(symbol),
        ethereum.Value.fromAddress(creator)
      ]
    );

    return result[0].toBigInt();
  }

  try_createVideo(
    id: BigInt,
    symbol: string,
    creator: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createVideo",
      "createVideo(uint256,string,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(id),
        ethereum.Value.fromString(symbol),
        ethereum.Value.fromAddress(creator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  detectionStrategy(): Address {
    let result = super.call(
      "detectionStrategy",
      "detectionStrategy():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_detectionStrategy(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "detectionStrategy",
      "detectionStrategy():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getLanguageType(languageId: i32): string {
    let result = super.call(
      "getLanguageType",
      "getLanguageType(uint16):(string)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(languageId))]
    );

    return result[0].toString();
  }

  try_getLanguageType(languageId: i32): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getLanguageType",
      "getLanguageType(uint16):(string)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(languageId))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getSubtitleAuditInfo(
    subtitleId: BigInt
  ): SubtitleSystem__getSubtitleAuditInfoResult {
    let result = super.call(
      "getSubtitleAuditInfo",
      "getSubtitleAuditInfo(uint256):(uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(subtitleId)]
    );

    return new SubtitleSystem__getSubtitleAuditInfoResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt()
    );
  }

  try_getSubtitleAuditInfo(
    subtitleId: BigInt
  ): ethereum.CallResult<SubtitleSystem__getSubtitleAuditInfoResult> {
    let result = super.tryCall(
      "getSubtitleAuditInfo",
      "getSubtitleAuditInfo(uint256):(uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(subtitleId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SubtitleSystem__getSubtitleAuditInfoResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt()
      )
    );
  }

  getUserBaseInfo(usr: Address): SubtitleSystem__getUserBaseInfoResult {
    let result = super.call(
      "getUserBaseInfo",
      "getUserBaseInfo(address):(uint256,int256)",
      [ethereum.Value.fromAddress(usr)]
    );

    return new SubtitleSystem__getUserBaseInfoResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getUserBaseInfo(
    usr: Address
  ): ethereum.CallResult<SubtitleSystem__getUserBaseInfoResult> {
    let result = super.tryCall(
      "getUserBaseInfo",
      "getUserBaseInfo(address):(uint256,int256)",
      [ethereum.Value.fromAddress(usr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SubtitleSystem__getUserBaseInfoResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  getUserLockReward(usr: Address, platform: Address, day: BigInt): BigInt {
    let result = super.call(
      "getUserLockReward",
      "getUserLockReward(address,address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(usr),
        ethereum.Value.fromAddress(platform),
        ethereum.Value.fromUnsignedBigInt(day)
      ]
    );

    return result[0].toBigInt();
  }

  try_getUserLockReward(
    usr: Address,
    platform: Address,
    day: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getUserLockReward",
      "getUserLockReward(address,address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(usr),
        ethereum.Value.fromAddress(platform),
        ethereum.Value.fromUnsignedBigInt(day)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  languages(param0: string): i32 {
    let result = super.call("languages", "languages(string):(uint16)", [
      ethereum.Value.fromString(param0)
    ]);

    return result[0].toI32();
  }

  try_languages(param0: string): ethereum.CallResult<i32> {
    let result = super.tryCall("languages", "languages(string):(uint16)", [
      ethereum.Value.fromString(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  lockUpTime(): BigInt {
    let result = super.call("lockUpTime", "lockUpTime():(uint256)", []);

    return result[0].toBigInt();
  }

  try_lockUpTime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("lockUpTime", "lockUpTime():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  penalty(): BigInt {
    let result = super.call("penalty", "penalty():(uint256)", []);

    return result[0].toBigInt();
  }

  try_penalty(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("penalty", "penalty():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  platformRate(rate1: i32, rate2: i32): SubtitleSystem__platformRateResult {
    let result = super.call(
      "platformRate",
      "platformRate(uint16,uint16):(uint16,uint16)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(rate1)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(rate2))
      ]
    );

    return new SubtitleSystem__platformRateResult(
      result[0].toI32(),
      result[1].toI32()
    );
  }

  try_platformRate(
    rate1: i32,
    rate2: i32
  ): ethereum.CallResult<SubtitleSystem__platformRateResult> {
    let result = super.tryCall(
      "platformRate",
      "platformRate(uint16,uint16):(uint16,uint16)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(rate1)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(rate2))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SubtitleSystem__platformRateResult(value[0].toI32(), value[1].toI32())
    );
  }

  platforms(param0: Address): SubtitleSystem__platformsResult {
    let result = super.call(
      "platforms",
      "platforms(address):(string,string,uint256,uint16,uint16)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new SubtitleSystem__platformsResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toBigInt(),
      result[3].toI32(),
      result[4].toI32()
    );
  }

  try_platforms(
    param0: Address
  ): ethereum.CallResult<SubtitleSystem__platformsResult> {
    let result = super.tryCall(
      "platforms",
      "platforms(address):(string,string,uint256,uint16,uint16)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SubtitleSystem__platformsResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toBigInt(),
        value[3].toI32(),
        value[4].toI32()
      )
    );
  }

  platfromJoin(
    platfrom: Address,
    name: string,
    symbol: string,
    rate1: i32,
    rate2: i32
  ): BigInt {
    let result = super.call(
      "platfromJoin",
      "platfromJoin(address,string,string,uint16,uint16):(uint256)",
      [
        ethereum.Value.fromAddress(platfrom),
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(symbol),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(rate1)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(rate2))
      ]
    );

    return result[0].toBigInt();
  }

  try_platfromJoin(
    platfrom: Address,
    name: string,
    symbol: string,
    rate1: i32,
    rate2: i32
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "platfromJoin",
      "platfromJoin(address,string,string,uint16,uint16):(uint256)",
      [
        ethereum.Value.fromAddress(platfrom),
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(symbol),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(rate1)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(rate2))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  preExtractOther(videoId: BigInt): BigInt {
    let result = super.call(
      "preExtractOther",
      "preExtractOther(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(videoId)]
    );

    return result[0].toBigInt();
  }

  try_preExtractOther(videoId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "preExtractOther",
      "preExtractOther(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(videoId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  registerLanguage(language: Array<string>): i32 {
    let result = super.call(
      "registerLanguage",
      "registerLanguage(string[]):(uint16)",
      [ethereum.Value.fromStringArray(language)]
    );

    return result[0].toI32();
  }

  try_registerLanguage(language: Array<string>): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "registerLanguage",
      "registerLanguage(string[]):(uint16)",
      [ethereum.Value.fromStringArray(language)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  settlementStrategy(param0: i32): SubtitleSystem__settlementStrategyResult {
    let result = super.call(
      "settlementStrategy",
      "settlementStrategy(uint8):(address,string)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))]
    );

    return new SubtitleSystem__settlementStrategyResult(
      result[0].toAddress(),
      result[1].toString()
    );
  }

  try_settlementStrategy(
    param0: i32
  ): ethereum.CallResult<SubtitleSystem__settlementStrategyResult> {
    let result = super.tryCall(
      "settlementStrategy",
      "settlementStrategy(uint8):(address,string)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SubtitleSystem__settlementStrategyResult(
        value[0].toAddress(),
        value[1].toString()
      )
    );
  }

  submitApplication(
    platform: Address,
    videoId: BigInt,
    strategy: i32,
    amount: BigInt,
    language: i32,
    deadline: BigInt,
    source: string
  ): BigInt {
    let result = super.call(
      "submitApplication",
      "submitApplication(address,uint256,uint8,uint256,uint16,uint256,string):(uint256)",
      [
        ethereum.Value.fromAddress(platform),
        ethereum.Value.fromUnsignedBigInt(videoId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(strategy)),
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(language)),
        ethereum.Value.fromUnsignedBigInt(deadline),
        ethereum.Value.fromString(source)
      ]
    );

    return result[0].toBigInt();
  }

  try_submitApplication(
    platform: Address,
    videoId: BigInt,
    strategy: i32,
    amount: BigInt,
    language: i32,
    deadline: BigInt,
    source: string
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "submitApplication",
      "submitApplication(address,uint256,uint8,uint256,uint16,uint256,string):(uint256)",
      [
        ethereum.Value.fromAddress(platform),
        ethereum.Value.fromUnsignedBigInt(videoId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(strategy)),
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(language)),
        ethereum.Value.fromUnsignedBigInt(deadline),
        ethereum.Value.fromString(source)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  subtitleNFT(param0: BigInt): SubtitleSystem__subtitleNFTResult {
    let result = super.call(
      "subtitleNFT",
      "subtitleNFT(uint256):(uint256,uint8,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new SubtitleSystem__subtitleNFTResult(
      result[0].toBigInt(),
      result[1].toI32(),
      result[2].toBigInt()
    );
  }

  try_subtitleNFT(
    param0: BigInt
  ): ethereum.CallResult<SubtitleSystem__subtitleNFTResult> {
    let result = super.tryCall(
      "subtitleNFT",
      "subtitleNFT(uint256):(uint256,uint8,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SubtitleSystem__subtitleNFTResult(
        value[0].toBigInt(),
        value[1].toI32(),
        value[2].toBigInt()
      )
    );
  }

  subtitleToken(): Address {
    let result = super.call("subtitleToken", "subtitleToken():(address)", []);

    return result[0].toAddress();
  }

  try_subtitleToken(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "subtitleToken",
      "subtitleToken():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  totalApplyNumber(): BigInt {
    let result = super.call(
      "totalApplyNumber",
      "totalApplyNumber():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalApplyNumber(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalApplyNumber",
      "totalApplyNumber():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalApplys(param0: BigInt): SubtitleSystem__totalApplysResult {
    let result = super.call(
      "totalApplys",
      "totalApplys(uint256):(address,address,uint256,string,uint8,uint256,uint16,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new SubtitleSystem__totalApplysResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toString(),
      result[4].toI32(),
      result[5].toBigInt(),
      result[6].toI32(),
      result[7].toBigInt(),
      result[8].toBigInt()
    );
  }

  try_totalApplys(
    param0: BigInt
  ): ethereum.CallResult<SubtitleSystem__totalApplysResult> {
    let result = super.tryCall(
      "totalApplys",
      "totalApplys(uint256):(address,address,uint256,string,uint8,uint256,uint16,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SubtitleSystem__totalApplysResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toString(),
        value[4].toI32(),
        value[5].toBigInt(),
        value[6].toI32(),
        value[7].toBigInt(),
        value[8].toBigInt()
      )
    );
  }

  totalPlatforms(): BigInt {
    let result = super.call("totalPlatforms", "totalPlatforms():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalPlatforms(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalPlatforms",
      "totalPlatforms():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalVideoNumber(): BigInt {
    let result = super.call(
      "totalVideoNumber",
      "totalVideoNumber():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalVideoNumber(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalVideoNumber",
      "totalVideoNumber():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  uploadSubtitle(
    applyId: BigInt,
    cid: string,
    languageId: i32,
    fingerprint: BigInt
  ): BigInt {
    let result = super.call(
      "uploadSubtitle",
      "uploadSubtitle(uint256,string,uint16,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(applyId),
        ethereum.Value.fromString(cid),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(languageId)),
        ethereum.Value.fromUnsignedBigInt(fingerprint)
      ]
    );

    return result[0].toBigInt();
  }

  try_uploadSubtitle(
    applyId: BigInt,
    cid: string,
    languageId: i32,
    fingerprint: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "uploadSubtitle",
      "uploadSubtitle(uint256,string,uint16,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(applyId),
        ethereum.Value.fromString(cid),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(languageId)),
        ethereum.Value.fromUnsignedBigInt(fingerprint)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  videoToken(): Address {
    let result = super.call("videoToken", "videoToken():(address)", []);

    return result[0].toAddress();
  }

  try_videoToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("videoToken", "videoToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  videos(param0: BigInt): SubtitleSystem__videosResult {
    let result = super.call(
      "videos",
      "videos(uint256):(address,uint256,string,address,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new SubtitleSystem__videosResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toString(),
      result[3].toAddress(),
      result[4].toBigInt(),
      result[5].toBigInt()
    );
  }

  try_videos(
    param0: BigInt
  ): ethereum.CallResult<SubtitleSystem__videosResult> {
    let result = super.tryCall(
      "videos",
      "videos(uint256):(address,uint256,string,address,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SubtitleSystem__videosResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toString(),
        value[3].toAddress(),
        value[4].toBigInt(),
        value[5].toBigInt()
      )
    );
  }

  withdraw(platform: Address, day: Array<BigInt>): BigInt {
    let result = super.call(
      "withdraw",
      "withdraw(address,uint256[]):(uint256)",
      [
        ethereum.Value.fromAddress(platform),
        ethereum.Value.fromUnsignedBigIntArray(day)
      ]
    );

    return result[0].toBigInt();
  }

  try_withdraw(
    platform: Address,
    day: Array<BigInt>
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "withdraw",
      "withdraw(address,uint256[]):(uint256)",
      [
        ethereum.Value.fromAddress(platform),
        ethereum.Value.fromUnsignedBigIntArray(day)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  withdrawDeposit(amount: BigInt): BigInt {
    let result = super.call(
      "withdrawDeposit",
      "withdrawDeposit(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(amount)]
    );

    return result[0].toBigInt();
  }

  try_withdrawDeposit(amount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "withdrawDeposit",
      "withdrawDeposit(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(amount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  zimuToken(): Address {
    let result = super.call("zimuToken", "zimuToken():(address)", []);

    return result[0].toAddress();
  }

  try_zimuToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("zimuToken", "zimuToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CancelCall extends ethereum.Call {
  get inputs(): CancelCall__Inputs {
    return new CancelCall__Inputs(this);
  }

  get outputs(): CancelCall__Outputs {
    return new CancelCall__Outputs(this);
  }
}

export class CancelCall__Inputs {
  _call: CancelCall;

  constructor(call: CancelCall) {
    this._call = call;
  }

  get applyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelCall__Outputs {
  _call: CancelCall;

  constructor(call: CancelCall) {
    this._call = call;
  }
}

export class CreateVideoCall extends ethereum.Call {
  get inputs(): CreateVideoCall__Inputs {
    return new CreateVideoCall__Inputs(this);
  }

  get outputs(): CreateVideoCall__Outputs {
    return new CreateVideoCall__Outputs(this);
  }
}

export class CreateVideoCall__Inputs {
  _call: CreateVideoCall;

  constructor(call: CreateVideoCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get symbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get creator(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class CreateVideoCall__Outputs {
  _call: CreateVideoCall;

  constructor(call: CreateVideoCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class EvaluateSubtitleCall extends ethereum.Call {
  get inputs(): EvaluateSubtitleCall__Inputs {
    return new EvaluateSubtitleCall__Inputs(this);
  }

  get outputs(): EvaluateSubtitleCall__Outputs {
    return new EvaluateSubtitleCall__Outputs(this);
  }
}

export class EvaluateSubtitleCall__Inputs {
  _call: EvaluateSubtitleCall;

  constructor(call: EvaluateSubtitleCall) {
    this._call = call;
  }

  get subtitleId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get attitude(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class EvaluateSubtitleCall__Outputs {
  _call: EvaluateSubtitleCall;

  constructor(call: EvaluateSubtitleCall) {
    this._call = call;
  }
}

export class PlatformRateCall extends ethereum.Call {
  get inputs(): PlatformRateCall__Inputs {
    return new PlatformRateCall__Inputs(this);
  }

  get outputs(): PlatformRateCall__Outputs {
    return new PlatformRateCall__Outputs(this);
  }
}

export class PlatformRateCall__Inputs {
  _call: PlatformRateCall;

  constructor(call: PlatformRateCall) {
    this._call = call;
  }

  get rate1(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get rate2(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class PlatformRateCall__Outputs {
  _call: PlatformRateCall;

  constructor(call: PlatformRateCall) {
    this._call = call;
  }

  get value0(): i32 {
    return this._call.outputValues[0].value.toI32();
  }

  get value1(): i32 {
    return this._call.outputValues[1].value.toI32();
  }
}

export class PlatfromJoinCall extends ethereum.Call {
  get inputs(): PlatfromJoinCall__Inputs {
    return new PlatfromJoinCall__Inputs(this);
  }

  get outputs(): PlatfromJoinCall__Outputs {
    return new PlatfromJoinCall__Outputs(this);
  }
}

export class PlatfromJoinCall__Inputs {
  _call: PlatfromJoinCall;

  constructor(call: PlatfromJoinCall) {
    this._call = call;
  }

  get platfrom(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get symbol(): string {
    return this._call.inputValues[2].value.toString();
  }

  get rate1(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get rate2(): i32 {
    return this._call.inputValues[4].value.toI32();
  }
}

export class PlatfromJoinCall__Outputs {
  _call: PlatfromJoinCall;

  constructor(call: PlatfromJoinCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class PreDivideCall extends ethereum.Call {
  get inputs(): PreDivideCall__Inputs {
    return new PreDivideCall__Inputs(this);
  }

  get outputs(): PreDivideCall__Outputs {
    return new PreDivideCall__Outputs(this);
  }
}

export class PreDivideCall__Inputs {
  _call: PreDivideCall;

  constructor(call: PreDivideCall) {
    this._call = call;
  }

  get platform(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class PreDivideCall__Outputs {
  _call: PreDivideCall;

  constructor(call: PreDivideCall) {
    this._call = call;
  }
}

export class PreDivideBatchCall extends ethereum.Call {
  get inputs(): PreDivideBatchCall__Inputs {
    return new PreDivideBatchCall__Inputs(this);
  }

  get outputs(): PreDivideBatchCall__Outputs {
    return new PreDivideBatchCall__Outputs(this);
  }
}

export class PreDivideBatchCall__Inputs {
  _call: PreDivideBatchCall;

  constructor(call: PreDivideBatchCall) {
    this._call = call;
  }

  get platform(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class PreDivideBatchCall__Outputs {
  _call: PreDivideBatchCall;

  constructor(call: PreDivideBatchCall) {
    this._call = call;
  }
}

export class PreExtract0Call extends ethereum.Call {
  get inputs(): PreExtract0Call__Inputs {
    return new PreExtract0Call__Inputs(this);
  }

  get outputs(): PreExtract0Call__Outputs {
    return new PreExtract0Call__Outputs(this);
  }
}

export class PreExtract0Call__Inputs {
  _call: PreExtract0Call;

  constructor(call: PreExtract0Call) {
    this._call = call;
  }

  get applyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class PreExtract0Call__Outputs {
  _call: PreExtract0Call;

  constructor(call: PreExtract0Call) {
    this._call = call;
  }
}

export class PreExtractOtherCall extends ethereum.Call {
  get inputs(): PreExtractOtherCall__Inputs {
    return new PreExtractOtherCall__Inputs(this);
  }

  get outputs(): PreExtractOtherCall__Outputs {
    return new PreExtractOtherCall__Outputs(this);
  }
}

export class PreExtractOtherCall__Inputs {
  _call: PreExtractOtherCall;

  constructor(call: PreExtractOtherCall) {
    this._call = call;
  }

  get videoId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class PreExtractOtherCall__Outputs {
  _call: PreExtractOtherCall;

  constructor(call: PreExtractOtherCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RecoverCall extends ethereum.Call {
  get inputs(): RecoverCall__Inputs {
    return new RecoverCall__Inputs(this);
  }

  get outputs(): RecoverCall__Outputs {
    return new RecoverCall__Outputs(this);
  }
}

export class RecoverCall__Inputs {
  _call: RecoverCall;

  constructor(call: RecoverCall) {
    this._call = call;
  }

  get applyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class RecoverCall__Outputs {
  _call: RecoverCall;

  constructor(call: RecoverCall) {
    this._call = call;
  }
}

export class RegisterLanguageCall extends ethereum.Call {
  get inputs(): RegisterLanguageCall__Inputs {
    return new RegisterLanguageCall__Inputs(this);
  }

  get outputs(): RegisterLanguageCall__Outputs {
    return new RegisterLanguageCall__Outputs(this);
  }
}

export class RegisterLanguageCall__Inputs {
  _call: RegisterLanguageCall;

  constructor(call: RegisterLanguageCall) {
    this._call = call;
  }

  get language(): Array<string> {
    return this._call.inputValues[0].value.toStringArray();
  }
}

export class RegisterLanguageCall__Outputs {
  _call: RegisterLanguageCall;

  constructor(call: RegisterLanguageCall) {
    this._call = call;
  }

  get value0(): i32 {
    return this._call.outputValues[0].value.toI32();
  }
}

export class SetAccessStrategyCall extends ethereum.Call {
  get inputs(): SetAccessStrategyCall__Inputs {
    return new SetAccessStrategyCall__Inputs(this);
  }

  get outputs(): SetAccessStrategyCall__Outputs {
    return new SetAccessStrategyCall__Outputs(this);
  }
}

export class SetAccessStrategyCall__Inputs {
  _call: SetAccessStrategyCall;

  constructor(call: SetAccessStrategyCall) {
    this._call = call;
  }

  get newAccess(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAccessStrategyCall__Outputs {
  _call: SetAccessStrategyCall;

  constructor(call: SetAccessStrategyCall) {
    this._call = call;
  }
}

export class SetAuditStrategyCall extends ethereum.Call {
  get inputs(): SetAuditStrategyCall__Inputs {
    return new SetAuditStrategyCall__Inputs(this);
  }

  get outputs(): SetAuditStrategyCall__Outputs {
    return new SetAuditStrategyCall__Outputs(this);
  }
}

export class SetAuditStrategyCall__Inputs {
  _call: SetAuditStrategyCall;

  constructor(call: SetAuditStrategyCall) {
    this._call = call;
  }

  get newAudit(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAuditStrategyCall__Outputs {
  _call: SetAuditStrategyCall;

  constructor(call: SetAuditStrategyCall) {
    this._call = call;
  }
}

export class SetDetectionStrategyCall extends ethereum.Call {
  get inputs(): SetDetectionStrategyCall__Inputs {
    return new SetDetectionStrategyCall__Inputs(this);
  }

  get outputs(): SetDetectionStrategyCall__Outputs {
    return new SetDetectionStrategyCall__Outputs(this);
  }
}

export class SetDetectionStrategyCall__Inputs {
  _call: SetDetectionStrategyCall;

  constructor(call: SetDetectionStrategyCall) {
    this._call = call;
  }

  get newDetection(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDetectionStrategyCall__Outputs {
  _call: SetDetectionStrategyCall;

  constructor(call: SetDetectionStrategyCall) {
    this._call = call;
  }
}

export class SetLockUpTimeCall extends ethereum.Call {
  get inputs(): SetLockUpTimeCall__Inputs {
    return new SetLockUpTimeCall__Inputs(this);
  }

  get outputs(): SetLockUpTimeCall__Outputs {
    return new SetLockUpTimeCall__Outputs(this);
  }
}

export class SetLockUpTimeCall__Inputs {
  _call: SetLockUpTimeCall;

  constructor(call: SetLockUpTimeCall) {
    this._call = call;
  }

  get time(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetLockUpTimeCall__Outputs {
  _call: SetLockUpTimeCall;

  constructor(call: SetLockUpTimeCall) {
    this._call = call;
  }
}

export class SetOperatorsCall extends ethereum.Call {
  get inputs(): SetOperatorsCall__Inputs {
    return new SetOperatorsCall__Inputs(this);
  }

  get outputs(): SetOperatorsCall__Outputs {
    return new SetOperatorsCall__Outputs(this);
  }
}

export class SetOperatorsCall__Inputs {
  _call: SetOperatorsCall;

  constructor(call: SetOperatorsCall) {
    this._call = call;
  }

  get operators(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get state(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetOperatorsCall__Outputs {
  _call: SetOperatorsCall;

  constructor(call: SetOperatorsCall) {
    this._call = call;
  }
}

export class SetSettlementStrategyCall extends ethereum.Call {
  get inputs(): SetSettlementStrategyCall__Inputs {
    return new SetSettlementStrategyCall__Inputs(this);
  }

  get outputs(): SetSettlementStrategyCall__Outputs {
    return new SetSettlementStrategyCall__Outputs(this);
  }
}

export class SetSettlementStrategyCall__Inputs {
  _call: SetSettlementStrategyCall;

  constructor(call: SetSettlementStrategyCall) {
    this._call = call;
  }

  get strategyId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get strategy(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get notes(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class SetSettlementStrategyCall__Outputs {
  _call: SetSettlementStrategyCall;

  constructor(call: SetSettlementStrategyCall) {
    this._call = call;
  }
}

export class SetSubtitleTokenCall extends ethereum.Call {
  get inputs(): SetSubtitleTokenCall__Inputs {
    return new SetSubtitleTokenCall__Inputs(this);
  }

  get outputs(): SetSubtitleTokenCall__Outputs {
    return new SetSubtitleTokenCall__Outputs(this);
  }
}

export class SetSubtitleTokenCall__Inputs {
  _call: SetSubtitleTokenCall;

  constructor(call: SetSubtitleTokenCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSubtitleTokenCall__Outputs {
  _call: SetSubtitleTokenCall;

  constructor(call: SetSubtitleTokenCall) {
    this._call = call;
  }
}

export class SetVideoTokenCall extends ethereum.Call {
  get inputs(): SetVideoTokenCall__Inputs {
    return new SetVideoTokenCall__Inputs(this);
  }

  get outputs(): SetVideoTokenCall__Outputs {
    return new SetVideoTokenCall__Outputs(this);
  }
}

export class SetVideoTokenCall__Inputs {
  _call: SetVideoTokenCall;

  constructor(call: SetVideoTokenCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetVideoTokenCall__Outputs {
  _call: SetVideoTokenCall;

  constructor(call: SetVideoTokenCall) {
    this._call = call;
  }
}

export class SetZimuTokenCall extends ethereum.Call {
  get inputs(): SetZimuTokenCall__Inputs {
    return new SetZimuTokenCall__Inputs(this);
  }

  get outputs(): SetZimuTokenCall__Outputs {
    return new SetZimuTokenCall__Outputs(this);
  }
}

export class SetZimuTokenCall__Inputs {
  _call: SetZimuTokenCall;

  constructor(call: SetZimuTokenCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetZimuTokenCall__Outputs {
  _call: SetZimuTokenCall;

  constructor(call: SetZimuTokenCall) {
    this._call = call;
  }
}

export class SubmitApplicationCall extends ethereum.Call {
  get inputs(): SubmitApplicationCall__Inputs {
    return new SubmitApplicationCall__Inputs(this);
  }

  get outputs(): SubmitApplicationCall__Outputs {
    return new SubmitApplicationCall__Outputs(this);
  }
}

export class SubmitApplicationCall__Inputs {
  _call: SubmitApplicationCall;

  constructor(call: SubmitApplicationCall) {
    this._call = call;
  }

  get platform(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get videoId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get strategy(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get language(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get deadline(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get source(): string {
    return this._call.inputValues[6].value.toString();
  }
}

export class SubmitApplicationCall__Outputs {
  _call: SubmitApplicationCall;

  constructor(call: SubmitApplicationCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateUsageCountsCall extends ethereum.Call {
  get inputs(): UpdateUsageCountsCall__Inputs {
    return new UpdateUsageCountsCall__Inputs(this);
  }

  get outputs(): UpdateUsageCountsCall__Outputs {
    return new UpdateUsageCountsCall__Outputs(this);
  }
}

export class UpdateUsageCountsCall__Inputs {
  _call: UpdateUsageCountsCall;

  constructor(call: UpdateUsageCountsCall) {
    this._call = call;
  }

  get id(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get ss(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class UpdateUsageCountsCall__Outputs {
  _call: UpdateUsageCountsCall;

  constructor(call: UpdateUsageCountsCall) {
    this._call = call;
  }
}

export class UpdateViewCountsCall extends ethereum.Call {
  get inputs(): UpdateViewCountsCall__Inputs {
    return new UpdateViewCountsCall__Inputs(this);
  }

  get outputs(): UpdateViewCountsCall__Outputs {
    return new UpdateViewCountsCall__Outputs(this);
  }
}

export class UpdateViewCountsCall__Inputs {
  _call: UpdateViewCountsCall;

  constructor(call: UpdateViewCountsCall) {
    this._call = call;
  }

  get id(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get vs(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class UpdateViewCountsCall__Outputs {
  _call: UpdateViewCountsCall;

  constructor(call: UpdateViewCountsCall) {
    this._call = call;
  }
}

export class UploadSubtitleCall extends ethereum.Call {
  get inputs(): UploadSubtitleCall__Inputs {
    return new UploadSubtitleCall__Inputs(this);
  }

  get outputs(): UploadSubtitleCall__Outputs {
    return new UploadSubtitleCall__Outputs(this);
  }
}

export class UploadSubtitleCall__Inputs {
  _call: UploadSubtitleCall;

  constructor(call: UploadSubtitleCall) {
    this._call = call;
  }

  get applyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get cid(): string {
    return this._call.inputValues[1].value.toString();
  }

  get languageId(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get fingerprint(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class UploadSubtitleCall__Outputs {
  _call: UploadSubtitleCall;

  constructor(call: UploadSubtitleCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class UserJoinCall extends ethereum.Call {
  get inputs(): UserJoinCall__Inputs {
    return new UserJoinCall__Inputs(this);
  }

  get outputs(): UserJoinCall__Outputs {
    return new UserJoinCall__Outputs(this);
  }
}

export class UserJoinCall__Inputs {
  _call: UserJoinCall;

  constructor(call: UserJoinCall) {
    this._call = call;
  }

  get usr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get despoit(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UserJoinCall__Outputs {
  _call: UserJoinCall;

  constructor(call: UserJoinCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get platform(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get day(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class WithdrawDepositCall extends ethereum.Call {
  get inputs(): WithdrawDepositCall__Inputs {
    return new WithdrawDepositCall__Inputs(this);
  }

  get outputs(): WithdrawDepositCall__Outputs {
    return new WithdrawDepositCall__Outputs(this);
  }
}

export class WithdrawDepositCall__Inputs {
  _call: WithdrawDepositCall;

  constructor(call: WithdrawDepositCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawDepositCall__Outputs {
  _call: WithdrawDepositCall;

  constructor(call: WithdrawDepositCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}
