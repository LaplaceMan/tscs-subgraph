type Dashboard @entity {
  id: ID!
  taskCount: BigInt!
  itemCount: BigInt!
  requireCount: Int!
  platformCount: BigInt!
  boxCount: BigInt!
  userCount: BigInt!
  dayData: [DayData!] @derivedFrom(field: "dashboard")
}

type DayData @entity {
  id: ID!
  dashboard: Dashboard!
  day: Int!
  taskCount: BigInt!
  itemCount: BigInt!
  platformCount: BigInt!
  boxCount: BigInt!
  userCount: BigInt!
}

type Task @entity {
  id: ID!
  applicant: User!
  box: Box!
  strategy: SettlementType!
  currency: Bytes!
  auditModule: Bytes!
  detectionModule: Bytes!
  amount: BigInt!
  requires: Require!
  start: Int!
  deadline: BigInt!
  source: String!
  itemCount: BigInt!
  items: [Item!] @derivedFrom(field: "task")
  adopted: Item
  txHash: Bytes
}

type User @entity {
  id: ID!
  time: Int!
  reputation: BigInt!
  deposit: BigInt!
  taskCount: BigInt!
  makeItemCount: BigInt!
  ownItemCount: BigInt!
  auditCount: BigInt!
  adoptedCount: BigInt!
  guard: Bytes
  revenues: [Revenue!] @derivedFrom(field: "user")
  tasks: [Task!] @derivedFrom(field: "applicant")
  itemsMaker: [Item!] @derivedFrom(field: "maker")
  itemsOwner: [Item!] @derivedFrom(field: "owner")
  audits: [Audit!] @derivedFrom(field: "auditor")
}

type Revenue @entity {
  id: ID!
  day: BigInt!
  user: User!
  platform: Platform!
  locked: BigInt!
  extracted: BigInt!
}

type Require @entity {
  id: ID!
  notes: String!
  tasks: [Task!] @derivedFrom(field: "requires")
  items: [Item!] @derivedFrom(field: "requires")
}

type Item @entity {
  id: ID!
  maker: User!
  owner: User!
  time: Int!
  task: Task!
  requires: Require!
  cid: String!
  fingerprint: BigInt!
  state: ItemState!
  supporterCount: BigInt!
  opponentCount: BigInt!
  audits: [Audit!] @derivedFrom(field: "item")
  versions: [Version!] @derivedFrom(field: "item")
  txHash: Bytes
}

type Version @entity {
  id: ID!
  item: Item!
  cid: String!
  vaild: Boolean!
  fingerprint: BigInt!
}

type Platform @entity {
  id: ID!
  name: String!
  symbol: String!
  time: Int!
  authorityModule: Bytes
  platformId: BigInt!
  boxCount: BigInt!
  rateCountsToProfit: Int!
  rateAuditorDivide: Int!
  boxs: [Box!] @derivedFrom(field: "platform")
}

type Box @entity {
  id: ID!
  platform: Platform!
  realId: BigInt!
  orderId: BigInt!
  creator: User!
  time: Int!
  taskCount: BigInt!
  tasks: [Task!] @derivedFrom(field: "box")
}

type Audit @entity {
  id: ID!
  time: Int!
  auditor: User!
  item: Item!
  attitude: AuditAttitude!
  txHash: Bytes
}

enum ItemState {
  NORMAL
  ADOPTED
  DELETED
}

enum AuditAttitude {
  SUPPORT
  OPPOSE
}

enum SettlementType {
  ONETIME
  DIVIDEND
  ONETIME_MORTGAGE
}
